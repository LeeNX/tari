---
name: Integration testing

'on':
  push:
    paths-ignore:
      - '**/*.md'
    branches:
      - 'leet-integration_tests*'
  pull_request:
    types: [opened]

env:
  toolchain: nightly-2022-05-01
  tests_ffi: 'true'

jobs:
  builds_bins:
    uses: ./.github/workflows/build_binaries_workflow.yml
    with:
      build_binaries: "tari_base_node tari_console_wallet tari_merge_mining_proxy tari_miner tari_wallet_ffi"

  integration:
    name: integration
    needs: builds_bins
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: npm ci and lint
        shell: bash
        working-directory: integration_tests
        run: |
          node -v
          npm ci
          npm run check-fmt
          npm run lint
          cd ../clients/base_node_grpc_client
          npm install
          cd ../wallet_grpc_client
          npm install

      - name: Cache cargo files and outputs
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "tari-binaries-builds"
          env-vars: ""

      - name: Debug target build
        continue-on-error: true
        shell: bash
        run: |
          ls -la $GITHUB_WORKSPACE/target
          du -sh $GITHUB_WORKSPACE/target
          ls -la $GITHUB_WORKSPACE/target/x86_64-unknown-linux-gnu/release/
          mkdir -p temp/out
          if [ -f "$GITHUB_WORKSPACE/target/x86_64-unknown-linux-gnu/release/tari_*" ]; then
            cp -v "$GITHUB_WORKSPACE/target/x86_64-unknown-linux-gnu/release/tari_*" temp/out/
          fi

      - name: run cucumber scenarios
        timeout-minutes: 90
        shell: bash
        working-directory: integration_tests
        env:
          RUSTFLAGS: "-C target_cpu=native"
        #  RUSTFLAGS: "-C target_cpu=native -C target-feature=+avx2"
          ROARING_ARCH: "native"
          CARGO_BUILD_TARGET: x86_64-unknown-linux-gnu
        #  CARGO_INCREMENTAL: 1
        #  CARGO_BUILD_INCREMENTAL: 1
        run: |
          mkdir -p cucumber_output
          node_modules/.bin/cucumber-js --profile "ci" --tags "not @wallet-ffi" \
            --format json:cucumber_output/tests.cucumber --exit \
            --retry 2 --retry-tag-filter "@flaky and not @broken" || exit 1

      - name: generate report
        if: always()
        shell: bash
        working-directory: integration_tests
        run: |
          if [ -f cucumber_output/tests.cucumber ] ; then
            node ./generate_report.js
          fi

      - name: run ffi wallet cucumber scenarios
        if: ${{ env.tests_ffi == 'true' }}
        timeout-minutes: 90
        shell: bash
        working-directory: integration_tests
        env:
          RUSTFLAGS: "-C target_cpu=native"
          ROARING_ARCH: "native"
          CARGO_BUILD_TARGET: x86_64-unknown-linux-gnu
        run: |
          mkdir -p cucumber_output
          node_modules/.bin/cucumber-js --profile "ci"  --tags "@wallet-ffi" \
            --format json:cucumber_output/tests_ffi.cucumber --exit \
            --retry 2 --retry-tag-filter "@flaky and not @broken" || exit 1

      - name: generate ffi report
        # if: ${{ env.tests_ffi == 'true' }}
        if: always()
        shell: bash
        working-directory: integration_tests
        run: |
          if [ -f "cucumber_output/tests_ffi.cucumber" ] ; then
            node ./generate_report.js "cucumber_output/tests_ffi.cucumber" \
              "temp/reports/cucumber_ffi_report.html"
          fi

      - name: store test results and bins
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test results
          path: |
            integration_tests/cucumber_output
            integration_tests/temp/out
            integration_tests/temp/reports
