---
# Build a new set of libraries when a new tag containing 'libwallet' is pushed
name: Build libwallet

on:
  push:
    branches:
      - "libwallet-*"
      - build-leet-testnet-dibbler-libwallet
    tags:
      - "libwallet-*"
  schedule:
    - cron: "05 00 * * *"
  workflow_dispatch:
    inputs:
      customTag:
        description: "Development Tag"
        required: true
        default: "development-tag"

env:
  toolchain: nightly-2022-05-01

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: ${{ env.toolchain }}
          target: x86_64-linux-android, aarch64-linux-android
          override: true

      - name: Build and package libwallet libraries
        id: build-libwallet
        uses: actions-rs/cargo@v1
        env:
          CFLAGS: "-DMDB_USE_ROBUST=0"
          # todo: once determined if this 32bit arm build is still required
          # then make necessary changes to tari comms (metrics fully optional)
          # cross build --target=armv7-linux-androideabi -p tari_wallet_ffi --release
        with:
          use-cross: yes
          command: build
          args: >
            --release -p tari_wallet_ffi
            --target=x86_64-linux-android
            --target=aarch64-linux-android

#          ./cross build --target=x86_64-linux-android -p tari_wallet_ffi --release
#          ./cross build --target=aarch64-linux-android -p tari_wallet_ffi --release

      - name: Debugging
        shell: bash
        run: |
          ls -alht target/x86_64-linux-android/release/
          ls -alht target/aarch64-linux-android/release/
          mkdir "$GITHUB_WORKSPACE/libwallet"
          cp target/x86_64-linux-android/release/libtari_wallet_ffi.a "$GITHUB_WORKSPACE/libwallet/libtari_wallet_ffi.x86.a"
          cp target/aarch64-linux-android/release/libtari_wallet_ffi.a "$GITHUB_WORKSPACE/libwallet/libtari_wallet_ffi.aarch64.a"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: libwallet-android
          path: ${{ github.workspace }}/libwallet

  ios:
    runs-on: macos-10.15
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: ${{ env.toolchain }}
          target: aarch64-apple-ios, x86_64-apple-ios
          override: true

      - name: Install macOS dependencies
        run: brew install cmake zip

      - name: Build
        run: |
          mkdir -p MobileWallet/TariLib/
          cd base_layer/wallet_ffi
          mv ios.config build.config
          ./mobile_build.sh || exit 1
          ls -alht $GITHUB_WORKSPACE/MobileWallet/TariLib/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: libwallet-ios
          path: ${{ github.workspace }}/MobileWallet/TariLib/

  create-release:
    runs-on: ubuntu-latest
    needs: [android, ios]
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        path: libwallet

      - name: Debugging
        shell: bash
        run: ls -alhtR
        working-directory: libwallet

      - name: Sync to S3
        if: ${{ startsWith(github.ref, 'refs/tags/libwallet') }}
        continue-on-error: true # Don't break if s3 upload fails
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1" # optional: defaults to us-east-1
          SOURCE_DIR: "$GITHUB_WORKSPACE/libwallet"
          DEST_DIR: "libwallet"

      - name: Create release
        if: ${{ startsWith(github.ref, 'refs/tags/libwallet') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "libwallet*/**/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          draft: true
